#pragma kernel CSMain


struct ItemInstanceData
{
    float4x4 mat;
    float4x4 matInverse;
    float4 infos;
};

uint positionsSize;
RWStructuredBuffer<ItemInstanceData> positions;

RWStructuredBuffer<uint> itemsPerBatch;
RWStructuredBuffer<uint> itemsPerBatchAdded;
RWStructuredBuffer<uint> batchCounters;
RWStructuredBuffer<ItemInstanceData> newPositions;

[numthreads(1024,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    uint batchId = id.x / 1024;
    if (id.x >= positionsSize || batchCounters[batchId] >= itemsPerBatch[batchId])
        return;
    
    if (positions[id.x].infos.x == 1)
    {
        uint outValue;
        InterlockedAdd(batchCounters[batchId], 1, outValue);
        newPositions[itemsPerBatchAdded[batchId] + outValue] = positions[id.x];
    }
}
